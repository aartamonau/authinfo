#+AUTHOR: Aliaksey Artamonau
#+EMAIL: aliaksiej.artamonau@gmail.com

* What is authinfo?

  Authinfo is supposed to be a "keep it simple stupid" and "don't reinvent the
  wheel" password manager. It's simple in that the passwords are stored in a
  human readable text file. Actually, it doesn't even support updating that
  file. It doesn't reinvent the wheel because it reuses the file format that
  has been there for decades, namely [[http://linux.about.com/library/cmd/blcmdl5_netrc.htm][netrc]] with extensions introduced by
  [[http://www.gnus.org/][Gnus]]. Similarly to Gnus, authinfo can read files that are encrypted with
  [[http://www.gnupg.org/][GnuPG]]. Since authinfo cannot update password file on its own, it's should be
  used in conjunction with your favorite text editor. It's especially
  convenient if your editor can also seamlessly decrypt GnuPG files (like
  [[https://www.gnu.org/software/emacs/][Emacs]] does).

* Getting authinfo
** Building from source

   Authinfo follows usual GNU Autotools build procedure:

   #+BEGIN_SRC sh
./configure
make all install
   #+END_SRC

   Optional features:
     - GPG support (default is on)

       To disable pass --disable-gpg flag to configure script. When enabled,
       [[http://www.gnupg.org/related_software/gpgme/][GPGME]] must be installed in the system.

     - Python2 bindings (default is on)

       To disable pass --disable-python flag to configure script. Minimal
       supported python version is 2.5. Python3 is not supported.

     - CLI tool (default is on)

       To disable pass --disable-cli flag to configure script.

* Using it
** Password file

   By default authinfo will look for password file in the following locations
   (in order):

     - $HOME/.authinfo.gpg (if GPG support is enabled)
     - $HOME/.authinfo
     - $HOME/.netrc.gpg (if GPG support is enabled)
     - $HOME/.netrc
     - \/etc\/authinfo.gpg (if GPG support is enabled)
     - \/etc\/authinfo
     - \/etc\/netrc.gpg (if GPG support is enabled)
     - \/etc\/netrc

   When password file has .gpg extension, it is assumed to be GPG encrypted
   and authinfo will try to decrypt it.
